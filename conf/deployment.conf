someApp {
  cloudType = "AWS"
  steps = {
    createLaunchConfig = {
      detailedMonitoring = false
      publicIpAddress = true
      instanceType = "t2.medium"
      keyName = "ryan"
      securityGroups = ["sg-86939be3"]
    }
    createELB = {
      ListenerDescriptions = [
        {
          Listener = {
            InstancePort = 9000
            InstanceProtocol = "http"
            LoadBalancerPort = 80
            Protocol = "http"
          }
          PolicyNames = []
        },
        {
          Listener = {
            InstancePort = 9000
            InstanceProtocol = "http"
            LoadBalancerPort = 443
            Protocol = "https"
            SSLCertificateId = "arn:aws:iam::567419588983:server-certificate/testcert-wildcard-10-2014"
          }
          PolicyNames = ["ELBSecurityPolicy-2014-10"]
        }
      ]
      Scheme = "internet-facing"
      SecurityGroups = ["sg-06939b63"]
      Subnets = ["subnet-087bb751", "subnet-885ff2ff", "subnet-033ea939"]
      Tags = [
        {
          name = "billing"
          value = "automation-api-work"
        }
      ]
      HealthCheck = {
        Target = "HTTP:9000/healthcheck"
        Interval = 30
        Timeout = 5
        HealthyThreshold = 5
        UnhealthyThreshold = 2
      }
      AccessLog = {
        CreateBucketPrefix = true
        GrantAccess = true
        EmitInterval = 60
        Enabled = true
        BucketName = "lw-elb-sandbox-logs"
        BucketPrefix = "someApp/prod"
      }
      ConnectionDraining = {
        Enabled = false
        Timeout = 284
      }
      ConnectionSettings = {
        IdleTimeout = 300
      }
      CrossZoneLoadBalancing = false
      Policies = {
        //TODO: any extra policies (i.e. detailed SSL OR session cookies)
      }
    }
    createASG = {

    }
    attachASGtoELB = {
      withWarming = true
    }
    cloudWatchAlarms = {
      //TODO: alarm settings
    }
    switchELB = {

    }
  }

  stepOrder = ["createLaunchConfig", "createELB", "createASG", "switchELB"]
}

include "deployment.stage.conf"
include "deployment.dev.conf"