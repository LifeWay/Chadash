someApp {
  cloudType = "AWS"
  steps = {
    createLaunchConfig = {
      detailedMonitoring = false
      publicIpAddress = true
      instanceType = "t2.medium"
      keyName = "ryan"
      securityGroups = ["sg-86939be3"]
    }
    createELB = {
      listeners = [
        {
          instancePort = 9000
          instanceProtocol = "http"
          loadBalancerPort = 80
          loadBalancerProtocol = "http"
        }
//          ,
//        {
//          instancePort = 9000
//          instanceProtocol = "http"
//          loadBalancerPort = 443
//          loadBalancerProtocol = "https"
//          sslCertificateId = "1353"
//        }
      ]
      securityGroups = ["sg-06939b63"]
      subnets = ["subnet-087bb751", "subnet-885ff2ff", "subnet-033ea939"]
      tags = [
        {
          name = "billing"
          value = "content platform"
        }
      ]
     // scheme = "internal"
      healthCheck = {
        target = "/healthcheck"
        interval = 30
        timeout = 5
        healthyThreshold = 5
        unhealthyThreshold = 2
      }
      accessLog = {
        //TODO: access log settings
      }
      connectionDraining = {
        //TODO: connection draining settings
      }
      connectionSettings = {
        //TODO: connection settings
      }
      crossZoneLoadBalancing = false
    }
    createASG = {

    }
    switchELB = {

    }
  }

  stepOrder = ["createLaunchConfig", "createELB", "createASG", "switchELB"]
}

include "deployment.stage.conf"
include "deployment.dev.conf"